@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">SmartHome</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass app-nav-menu" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="users">
                        <span class="oi oi-person" aria-hidden="true"></span> Users
                    </NavLink>
                </li>
            </Authorized>
            <NotAuthorized>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
    <AuthorizeView>
        <Authorized>
            <button class="btn btn-primary text-center ml-3 mb-2" @onclick="LogOut"><span class="oi oi-account-logout" aria-hidden="true"</span> Log out</button>
        </Authorized>
        <NotAuthorized>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async Task LogOut()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }
}
